steps:

# Step 1: Check format
- name: "hashicorp/terraform:latest"
  entrypoint: "terraform"
  args: ["fmt", "-check", "-recursive"]

# Step 2: Create backend
- name: "hashicorp/terraform:latest"
  entrypoint: "sh"
  args:
    - "-c"
    - |
      cat >backend.tf <<EOF
      terraform {
        backend "gcs" {
            bucket  = "${_BABUCKET}"
            prefix  = "terraform/state"
          }
      }
      EOF

# Step 3: Initialize Terraform
- name: "hashicorp/terraform:latest"
  entrypoint: "terraform"
  args: ["init"]

# Step 4: Validate Terraform configuration
- name: "hashicorp/terraform:latest"
  entrypoint: "terraform"
  args: ["validate"]

# Step 5: Plan Terraform changes
- name: "hashicorp/terraform:latest"
  entrypoint: "terraform"
  args: ["plan", "-out=tfplan"]

# Step 6: Apply Terraform changes only on the main branch
- name: "hashicorp/terraform:latest"
  entrypoint: "sh"
  args:
    - "-c"
    - |
      if [ "${BRANCH_NAME}" = "main" ]; then
        terraform apply -auto-approve tfplan
      else
        echo "Skipping apply step as branch is not main."
      fi

logs_bucket: $_LOGBUCKET

# Add any environment variables if needed
timeout: "1200s"  # Optional: Adjust timeout as required for long-running steps